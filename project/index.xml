<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | Moksh Shukla</title>
    <link>https://moksh-shukla.github.io/project/</link>
      <atom:link href="https://moksh-shukla.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 04 Jan 2022 15:00:46 +0530</lastBuildDate>
    <image>
      <url>https://moksh-shukla.github.io/img/icon-192.png</url>
      <title>Projects</title>
      <link>https://moksh-shukla.github.io/project/</link>
    </image>
    
    <item>
      <title>Instructional Knowledge Acquisition from WikiHow</title>
      <link>https://moksh-shukla.github.io/project/kb_nlp/</link>
      <pubDate>Tue, 04 Jan 2022 15:00:46 +0530</pubDate>
      <guid>https://moksh-shukla.github.io/project/kb_nlp/</guid>
      <description>&lt;p&gt;Project part of &lt;strong&gt;Research Internship&lt;/strong&gt; at &lt;a href=&#34;https://wilburone.github.io/lab.html&#34;&gt;Natural Language Processing Lab, Virginia Tech&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt;: May 2021 - Present&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mentor&lt;/strong&gt;: Prof. Lifu Huang, Dept. of Computer Science, Virginia Tech&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preparing a benchmark dataset for Natural Language Understanding tasks which can be derived based on the
WikiHow resources.&lt;/li&gt;
&lt;li&gt;Designing Neural Baseline Models for this task using BERT, VisualBERT&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Baseline 1&lt;/strong&gt;: Modelled as binary classification problem for each set of task description and entities as input using pre-trained model &lt;em&gt;BERT&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Baseline 2&lt;/strong&gt;: Modelled as binary classification problem for each set of task text description, task images, task videos and entities as input using pre-trained SOTA models like &lt;em&gt;VisualBERT&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Authoring a research paper as the &lt;strong&gt;lead author&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Optimizing Uber Freight Operations with Urban Consolidation Centres</title>
      <link>https://moksh-shukla.github.io/project/uber_hackathon/</link>
      <pubDate>Sun, 14 Mar 2021 14:15:01 +0530</pubDate>
      <guid>https://moksh-shukla.github.io/project/uber_hackathon/</guid>
      <description>&lt;p&gt;This project is a hackathon submission to Uber&amp;rsquo;s Hackathon &lt;strong&gt;Hacktag 2021&lt;/strong&gt;. The hackathon required providing an innovative solution around the theme &lt;em&gt;&amp;ldquo;Uber beyond Mobility and Delivery.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt;: February 2021 - March 2021&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ideation Details&lt;/strong&gt;: 
Urban Consolidation Centers(UCCs) are locations, typically on the outskirts of cities, where deliveries are brought, sorted, and then dispatched. Goods from multiple suppliers can be consolidated into fewer shipments, making it possible to optimize loads and truck sizes, thus cutting down on the number of trips and vehicles required. UCCs have been into research for long, but are gaining prominence now because of availability of suitable technological infrastructure, such as the one available with Uber Freight. Thus, slight modifications in the software infrastructure and some initial capital expenditure in the form of UCCs, can yield promising results.
The characteristic additions to software stack would be: Implementing this new feature into the existing Uber Freight product involves:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding the shipper interface to the existing app, for shippers to book and track intra-city cargo transportation services.&lt;/li&gt;
&lt;li&gt;Implementing routing algorithms on the backend, responsible for optimally allocating cargo packages to intracity routes.&lt;/li&gt;
&lt;li&gt;Implementing cargo-tracking services allowing shippers and receivers to track their cargo packages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The characteristic profits are estimated as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Dense cities that deploy UCCs could save 25 percent on delivery costs per parcel (compared to traditional methods), due to greater capacity utilization, lower labor costs, and fewer miles driven.&lt;/li&gt;
&lt;li&gt;Estimates suggest that mileage could be reduced by as much as 45 percent to deliver the same volume of goods, thus reducing general wear and tear as well as all types of vehicle emissions (CO&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;, NO&lt;!-- raw HTML omitted --&gt;x&lt;!-- raw HTML omitted --&gt;, and particulate matter)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Proposed Tech Stack&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Booking database&lt;/strong&gt;&lt;/em&gt;: MongoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Object structure is not highly relational so MongoDB is a great choice, as it comes with great performance and rapid iteration speed during development, along with the benefit of easy horizontal scalability.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Booking service&lt;/strong&gt;&lt;/em&gt;: Node.js&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Node.JS is highly performant for asynchronous operations, and also allows for rapid development and iteration speed. Any computationally expensive tasks involved can be delegated to the routing server asynchronously.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Live location tracking and streaming&lt;/strong&gt;&lt;/em&gt;: Apache Kafka&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kafka is highly performant for low-latency data streaming, and is easily scalable to support a large number of tracked vehicles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Routing service&lt;/strong&gt;&lt;/em&gt;: C++/Java/Rust/Go&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Routing is a computationally expensive operation and should be delegated to a high-performance server to avoid slowing down or blocking the user-facing services.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Framework for Broad Class Incremental Learning System</title>
      <link>https://moksh-shukla.github.io/project/bclis/</link>
      <pubDate>Wed, 20 Jan 2021 02:26:24 +0530</pubDate>
      <guid>https://moksh-shukla.github.io/project/bclis/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt;: October 2020 - January 2021&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mentor&lt;/strong&gt;: Prof. Krishna K. Sharma, Dept. of Computer Science &amp;amp; Informatics, University of Kota&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Developed a Novel Learning Framework Broad Class Incremental Learning System (BCILS) to tackle the
forgetting problem of Class Incremental Learning.&lt;/li&gt;
&lt;li&gt;BCILS updates the model when there is training data from unknown classes using the deduced iterative formula.&lt;/li&gt;
&lt;li&gt;Proposed approach tested on sensor-induced physiological signals.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>One vs Many: Causal Analysis of Airbnb using a Quasi-Experiment</title>
      <link>https://moksh-shukla.github.io/project/airbnb/</link>
      <pubDate>Mon, 20 Jul 2020 02:26:01 +0530</pubDate>
      <guid>https://moksh-shukla.github.io/project/airbnb/</guid>
      <description>&lt;p&gt;Project part of Summer Internship 2020 at IIM Ahmedabad.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt;: April 2020 - July 2020&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mentor&lt;/strong&gt;: Prof. Anuj Kapoor, IIM Ahemdabad&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compared the service quality ratings of hosts who own multiple properties to those who own only a single property, using detailed property-level data from Airbnb from the cities of Amsterdam &amp;amp; Antwerp&lt;/li&gt;
&lt;li&gt;Employed a &lt;em&gt;Difference-in-Differences&lt;/em&gt; Design to causally study the effect of government crackdown on hosts
who own multiple properties and disentangle the effect on service quality rating of hosts&lt;/li&gt;
&lt;li&gt;Used &lt;em&gt;Latent Dirichlet Allocation (LDA)&lt;/em&gt; to classify 15k guest reviews into Property based &amp;amp; Host based
and hence established a shift from Property to Host based reviews after the crackdown&lt;/li&gt;
&lt;li&gt;Investigated heterogeneity in effects using data driven machine learning algorithm: Causal Forest&lt;/li&gt;
&lt;li&gt;Paper &lt;em&gt;&lt;strong&gt;Revised and Re-submitted&lt;/strong&gt;&lt;/em&gt; to Elsevierâ€™s IJRM.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tumor Segmentation from Brain MRI using Clustering Algorithms</title>
      <link>https://moksh-shukla.github.io/project/brain_tumor/</link>
      <pubDate>Fri, 06 Mar 2020 02:26:12 +0530</pubDate>
      <guid>https://moksh-shukla.github.io/project/brain_tumor/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt;: July 2019 - March 2020&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mentor&lt;/strong&gt;: Prof. Krishna K. Sharma, Dept. of Computer Science &amp;amp; Informatics, University of Kota&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compared various Noise Filters on images with Gaussian Noise using PSNR as the test parameter&lt;/li&gt;
&lt;li&gt;Implemented Contour-Detection Based Cropping of MRI images as a pre-processing step which improved
accuracy of clustering algorithms and reduced their computation time by clipping unwanted portion from MRI&lt;/li&gt;
&lt;li&gt;Tested 9 different combinations of Noise Filters &amp;amp; Clustering Algorithms for their tumor classification accuracy, with
Anisotropic Diffusion Filter along with Fuzzy K-Means achieving the best Classification Accuracy of 94.55%&lt;/li&gt;
&lt;li&gt;Devised an efficient algorithm for Tumor Detection involving: Contour-based Cropping, De-Noising using
Anisotropic Diffusion Filter, Segmentation with Fuzzy K-Means &amp;amp; Post-Processing with Erosion &amp;amp; Median
Filter&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Smart Gamer</title>
      <link>https://moksh-shukla.github.io/project/smart_gamer/</link>
      <pubDate>Mon, 15 Jul 2019 02:26:47 +0530</pubDate>
      <guid>https://moksh-shukla.github.io/project/smart_gamer/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;The project was part of the Science and Technology Council&amp;rsquo;s Summer Project at IIT Kanpur.
This project&amp;rsquo;s goal was to create an interactive game that could be played with gestures and to create a Game AI.
This project was implemented in three stages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt;: May 2019 - July 2019&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stage I: Developed a space shooter game using PyGame and built a GameAI using Behaviour Tree&lt;/li&gt;
&lt;li&gt;Stage II: Incorporated gesture control for the game using OpenCV and Depth Sensing using Intel RealSense&lt;/li&gt;
&lt;li&gt;Stage III: Built a Game AI using Q-Network for the PyGame based space shooter game.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
